// Напишите программу с классом, у которого есть символьное и цело­численное поле.
// В классе должны быть описаны версии конструктора с двумя аргументами (целое число и символ -
// определяют значения полей), а также с одним аргументом типа douЬle. В последнем случае действительная
// часть аргумента определяет код символа (значение сим­вольного поля), а дробная часть
// (с учетом десятых и сотых) определяет значение целочисленного поля.
// Например, если аргументом передается число 65,1267, то значением символьного поля
// будет символ 'А' с ко­дом 65, а целочисленное поле получит значение 12 (в дробной части учитываются
// только десятые и сотые).

namespace Task04
{
    class Task04
    {
        char charSymb;
        int intSymb;
    public Task04(int a, char b)
    {
        intSymb = a;
        charSymb = b;
    }

    public Task04(double a)
    {
        intSymb =  (int)(a * 100) % 100;
        charSymb = (char)(int)a;
    }
    
    public void ShowObject()
    {
        Console.WriteLine($"\nПервое поле объекта, символ, равно: '{this.charSymb}'.");
        Console.WriteLine($"Второе поле объекта, целое число, равно: {this.intSymb}.");
    }
    
    }

    class Program
    {
        static void Main(string[] args)
        {
            Console.Clear();
            Task04 A = new Task04(5, 'G');
            A.ShowObject();

            Task04 B = new Task04(65.1267);
            B.ShowObject();
        }
    }

}